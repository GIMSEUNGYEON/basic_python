package day06;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class MyOmok03_19 extends JFrame {

   private JPanel contentPane;
   boolean flag_wb = true;
   boolean flag_ing = true;
   int[][] arr2D  = {
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},

      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},

      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},

      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0},
      {0,0,0,0,0,   0,0,0,0,0, 0,0,0,0,0, 0,0,0,0}
      
   };
   
   JLabel[][] lbl2D = new JLabel[19][19];
   private final JLabel lbl_reset = new JLabel("리셋");
   

   /**
    * Launch the application.
    */
   public static void main(String[] args) {
      EventQueue.invokeLater(new Runnable() {
         public void run() {
            try {
               MyOmok03_19 frame = new MyOmok03_19();
               frame.setVisible(true);
            } catch (Exception e) {
               e.printStackTrace();
            }
         }
      });
   }

   /**
    * Create the frame.
    */
   public MyOmok03_19() {
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      setBounds(100, 100, 450, 450);
      contentPane = new JPanel();
      contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

      setContentPane(contentPane);
      contentPane.setLayout(null);
      lbl_reset.addMouseListener(new MouseAdapter() {
         @Override
         public void mouseClicked(MouseEvent e) {
            myreset();
         }
      });
      lbl_reset.setBounds(410, 10, 40, 40);
      contentPane.add(lbl_reset);

      for (int i = 0; i < 19; i++) {
         for (int j = 0; j < 19; j++) {
            JLabel lbl = new JLabel("");
            lbl.addMouseListener(new MouseAdapter() {
               @Override
               public void mouseClicked(MouseEvent e) {
                  myclick(e);
               }
            });
            lbl.setIcon(new ImageIcon(MyOmok03_19.class.getResource("/day05/0.png")));
            lbl.setBounds(j * 40, i * 40, 40, 40);
            lbl.setText(i + "," + j);
            contentPane.add(lbl);
            lbl2D[i][j] = lbl;
         }
      }

      myrender();

   }

   void myreset() {
      for (int i = 0; i < 19; i++) {
         for (int j = 0; j < 19; j++) {
            arr2D[i][j] = 0;
         }
      }
      myrender();
      flag_ing = true;
      flag_wb = true;
      
      
      System.out.println("myreset");
   }

   void myrender() {
      for (int i = 0; i < 19; i++) {
         for (int j = 0; j < 19; j++) {
            if (arr2D[i][j] == 0) {
               lbl2D[i][j].setIcon(new ImageIcon(MyOmok03_19.class.getResource("/day05/0.png")));
            }
            if (arr2D[i][j] == 1) {
               lbl2D[i][j].setIcon(new ImageIcon(MyOmok03_19.class.getResource("/day05/1.png")));
            }
            if (arr2D[i][j] == 2) {
               lbl2D[i][j].setIcon(new ImageIcon(MyOmok03_19.class.getResource("/day05/2.png")));
            }
         }
      }
   }

   int getUP(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i--;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getDW(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i++;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getLE(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            j--;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getRI(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i--;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getUR(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i--;
            j++;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getUL(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i--;
            j--;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getDR(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            j++;
            i++;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   int getDL(int i, int j, int stone) {

      int cnt = 0;
      try {
         while (true) {
            i++;
            j--;
            if (arr2D[i][j] == stone) {
               cnt++;
            } else {
               return cnt;
            }
         }
      } catch (Exception e) {
         return cnt;
      }
   }

   void myclick(MouseEvent e) {

      if (!flag_ing) {
         return;
      }

      JLabel temp = (JLabel) e.getSource();
      String str_ij = temp.getText();
      String[] arr_ij = str_ij.split(",");
      int i = Integer.parseInt(arr_ij[0]);
      int j = Integer.parseInt(arr_ij[1]);

      if (arr2D[i][j] > 0) {
         return;
      }
      int stone = 0;
      if (flag_wb) {
         arr2D[i][j] = 1;
         stone = 1;
      } else {
         arr2D[i][j] = 2;
         stone = 2;
      }
      int up = getUP(i, j, stone); // i--
      int dw = getDW(i, j, stone); // i++
      int le = getLE(i, j, stone); // j--
      int ri = getRI(i, j, stone); // j++

      int ur = getUR(i, j, stone); // i--,j--
      int ul = getUL(i, j, stone); // i--,j++
      int dr = getDR(i, j, stone); // i++,j++
      int dl = getDL(i, j, stone); // i++,j--

      System.out.println("up: " + up);
      System.out.println("dw: " + dw);
      System.out.println("le: " + le);
      System.out.println("ri: " + ri);
      System.out.println("ur: " + ur);
      System.out.println("ul: " + ul);
      System.out.println("dr: " + dr);
      System.out.println("dl: " + dl);

      int d1 = up + dw + 1;
      int d2 = ur + dl + 1;
      int d3 = ri + le + 1;
      int d4 = ul + dr + 1;

      myrender();

      if (d1 == 5 || d2 == 5 || d3 == 5 || d4 == 5) {
         if (flag_wb) {
            JOptionPane.showMessageDialog(null, "흑돌승리");
         } else {
            JOptionPane.showMessageDialog(null, "백돌승리");

         }
         flag_ing = false;
      }

      flag_wb = !flag_wb; // boolean으로 검과 흰을 순서대로
   }
}

